package gov.iti.jets.clinify.models.entities;// default package
// Generated 23 Jun 2023, 11:17:13 by Hibernate Tools 6.1.7.Final


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

/**
 * Appointment generated by hbm2java
 */
@Entity
@Table(name="appointment"
    ,catalog="clinify"
)
public class Appointment extends BaseEntity {


     private Integer id;
     private Doctor doctor;
     private Patient patient;
     private Appointment fullAppointment;
     private Timestamp date;
     private Time startTime;
     private Time endTime;
     private String creditCardLastFourDigits;
     private String status;
     private Integer rating;
     private String description;
     private Set<Appointment> dividedAppointments = new HashSet(0);

    public Appointment() {
    }

	
    public Appointment(Doctor doctor, Timestamp date, Time startTime, Time endTime) {
        this.doctor = doctor;
        this.date = date;
        this.startTime = startTime;
        this.endTime = endTime;
    }
    public Appointment(Doctor doctor, Patient patient, Appointment appointment, Timestamp date, Time startTime, Time endTime, String creditCardLastFourDigits, String status, Integer rating, String description, Set<Appointment> appointments) {
       this.doctor = doctor;
       this.patient = patient;
       this.fullAppointment = appointment;
       this.date = date;
       this.startTime = startTime;
       this.endTime = endTime;
       this.creditCardLastFourDigits = creditCardLastFourDigits;
       this.status = status;
       this.rating = rating;
       this.description = description;
       this.dividedAppointments = appointments;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="doctor_id", nullable=false)
    public Doctor getDoctor() {
        return this.doctor;
    }
    
    public void setDoctor(Doctor doctor) {
        this.doctor = doctor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="patient_id")
    public Patient getPatient() {
        return this.patient;
    }
    
    public void setPatient(Patient patient) {
        this.patient = patient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="full_appointment_id")
    public Appointment getFullAppointment() {
        return this.fullAppointment;
    }
    
    public void setFullAppointment(Appointment fullAppointment) {
        this.fullAppointment = fullAppointment;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date", nullable=false, length=19)
    public Timestamp getDate() {
        return this.date;
    }
    
    public void setDate(Timestamp date) {
        this.date = date;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="start_time", nullable=false, length=8)
    public Time getStartTime() {
        return this.startTime;
    }
    
    public void setStartTime(Time startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="end_time", nullable=false, length=8)
    public Time getEndTime() {
        return this.endTime;
    }
    
    public void setEndTime(Time endTime) {
        this.endTime = endTime;
    }

    
    @Column(name="credit_card_last_four_digits", length=4)
    public String getCreditCardLastFourDigits() {
        return this.creditCardLastFourDigits;
    }
    
    public void setCreditCardLastFourDigits(String creditCardLastFourDigits) {
        this.creditCardLastFourDigits = creditCardLastFourDigits;
    }

    
    @Column(name="status", length=20)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    
    @Column(name="rating")
    public Integer getRating() {
        return this.rating;
    }
    
    public void setRating(Integer rating) {
        this.rating = rating;
    }

    
    @Column(name="description", length=360)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="fullAppointment")
    public Set<Appointment> getDividedAppointments() {
        return this.dividedAppointments;
    }
    
    public void setDividedAppointments(Set<Appointment> dividedAppointments) {
        this.dividedAppointments = dividedAppointments;
    }

    @Override
    public String toString() {
        return "Appointment{" +
                "id=" + id +
                "\n, doctor=" + doctor.getId() +
                "\n, patient=" + patient.getId() +
                "\n, fullAppointment=" + fullAppointment +
                "\n, date=" + date +
                "\n, startTime=" + startTime +
                "\n, endTime=" + endTime +
                "\n, creditCardLastFourDigits='" + creditCardLastFourDigits + '\'' +
                "\n, status='" + status + '\'' +
                "\n, rating=" + rating +
                "\n, description='" + description + '\'' +
                "\n, dividedAppointments=" + dividedAppointments +
                '}';
    }
}


